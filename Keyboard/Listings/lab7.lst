C51 COMPILER V9.60.7.0   LAB7                                                              03/07/2023 18:22:28 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LAB7
OBJECT MODULE PLACED IN .\Objects\lab7.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lab7.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lab7
                    -.lst) TABS(2) OBJECT(.\Objects\lab7.obj)

line level    source

   1            
   2          //    P3.4  R1      1      2      3      A
   3          //    P3.5  R2      4      5      6      B
   4          //    P3.6  R3      7      8      9      C
   5          //    P3.7  R4      *      0      #      D
   6          //                  C1     C2     C3     C4
   7          //                P3.3   P3.2   P3.1   P3.0
   8          #include<at89c5131.h>
   9          #include<stdio.h>
  10          #include<stdlib.h>
  11          #include "lab7.h"
  12          code unsigned char display_msg1[]="ENTER PASSWORD :";
  13          code unsigned char display_msg2[]=" ACCESS GRANTED ";
  14          code unsigned char display_msg3[]="  ACCESS DENIED ";
  15          unsigned char a ;
  16          unsigned char b;
  17          unsigned char c;
  18          int i;
  19          int j;
  20          int column;
  21          char password_store[4][4] = { {'A' , '3' , '2' , '1'}  , {'B' , '6' , '5' , '4'} , {'C' , '9' , '8' , '7'}
             - , {  'D'  , '#', '0' , '*'}    } ; 
  22          char password[9];
  23          
  24            int m;
  25            int w;
  26          void main()
  27          {
  28   1        lcd_init();
  29   1        lcd_cmd(0x80);
  30   1        msdelay(4);
  31   1        lcd_write_string(display_msg1);
  32   1        for(w = 0 ; w<8 ; w++)
  33   1        {
  34   2         //start
  35   2           
  36   2           P3 = 0x00 ;
  37   2      JUMP:  P3 = 0x0F ;  // set columns to take input
  38   2             a = P3;
  39   2           while( a != 0x0F)
  40   2          {
  41   3          P3 = 0x0F;
  42   3          a = P3;
  43   3        }
  44   2        //checked if previously pressed key is released
  45   2        P3 = 0x0F;
  46   2        a = P3;
  47   2        while(a == 0x0F)
  48   2        { 
  49   3        
  50   3          P3 = 0x0F;
  51   3          a = P3;
  52   3        }
  53   2        msdelay(20);
C51 COMPILER V9.60.7.0   LAB7                                                              03/07/2023 18:22:28 PAGE 2   

  54   2        
  55   2        P3 = 0x0F;
  56   2        a = P3;
  57   2        if(a == 0x0F)
  58   2        {
  59   3           goto JUMP ;  
  60   3        }
  61   2        c = 0xEF;
  62   2        for(m=0 ; m<4 ; m++)
  63   2        {
  64   3        P3 = c;
  65   3        a = P3 ;
  66   3        a  =  a & 0x0F;
  67   3        for(j = 0 ; j<4 ; j++)
  68   3      {
  69   4         b = a & 0x01;
  70   4        a = a >> 1;
  71   4        if(b == 0)
  72   4        {
  73   5          column = j;
  74   5          break;
  75   5        }
  76   4        if(j == 3)
  77   4        {
  78   5         column = 5;
  79   5        
  80   5        }
  81   4        
  82   4      }
  83   3      
  84   3      
  85   3      if(column < 4 )
  86   3      {
  87   4         password[w] = password_store[m][column];
  88   4        password[w+1] = '\0';
  89   4        lcd_cmd(0xC0);
  90   4        lcd_write_string(password) ;
  91   4        break;
  92   4      }
  93   3      
  94   3      c = c & 0x7f ;
  95   3      c = c << 1;
  96   3      c = c | 0x0F;
  97   3        }
  98   2        
  99   2        
 100   2      
 101   2        
 102   2        
 103   2      }
 104   1        
 105   1      
 106   1      if(password[0] == '1' && password[1] == '5' && password[2] == 'A' && password[3] == '8' && password[4] == 
             -'*' && password[5] == 'D' && password[6] == '6' && password[7] == '#')
 107   1      {
 108   2         lcd_cmd(0x80); //Move cursor to first line
 109   2         lcd_write_string(display_msg2);
 110   2      }
 111   1      else
 112   1      {
 113   2         lcd_cmd(0x80); //Move cursor to first line
 114   2      lcd_write_string(display_msg3);
C51 COMPILER V9.60.7.0   LAB7                                                              03/07/2023 18:22:28 PAGE 3   

 115   2      }
 116   1      
 117   1      
 118   1      
 119   1      while(1);
 120   1        }
 121            
 122            
 123            
 124          
 125          
 126            
 127            
 128            


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    497    ----
   CONSTANT SIZE    =     51    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     38       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
