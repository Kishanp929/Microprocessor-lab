C51 COMPILER V9.60.7.0   ALGO_THOMASS                                                      04/08/2023 15:01:46 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE ALGO_THOMASS
OBJECT MODULE PLACED IN .\Objects\Algo_Thomass.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Algo_Thomass.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\Algo_Thomass.lst) TABS(2) OBJECT(.\Objects\Algo_Thomass.obj)

line level    source

   1          #include<at89c5131.h>
   2          #include<stdio.h>
   3          #include<stdlib.h>
   4          #include "lcd.h"
   5          
   6          code unsigned char display_msg1[]="Prod1=";
   7          code unsigned char display_msg2[]="Time1=";
   8          long unsigned int x ;
   9          long unsigned int y ;
  10          long unsigned int x1 , x0 , y1 , y0 , z0 , z1 , z2  ;
  11          long unsigned int z;
  12          int i ;
  13          char product[10];
  14          int k , ki;
  15          int usec ; 
  16          char display_time[5];
  17          
  18          void main()
  19          {
  20   1        lcd_init();
  21   1        TMOD = 0x01;
  22   1        TH0 = 0x00;
  23   1        TL0 = 0x00 ;
  24   1        x = 14571 ;
  25   1      y = 8636 ;
  26   1        
  27   1        TR0 = 1;
  28   1      
  29   1      x1 = x/10;
  30   1      x0 = x%10;
  31   1      y1 = y/10;
  32   1      y0 = y%10;
  33   1      z0 = x0*y0;
  34   1      z1 = (x0+x1)*(y0+y1);
  35   1      z2 = x1*y1;
  36   1      z = z0 + (z1 - z0 - z2)*10 + z2*100;
  37   1      TR0 = 0 ;    //stop timer
  38   1        for(k=9 ; k>=0 ; k--)
  39   1        {
  40   2         product[k] = z%10 + '0';
  41   2          z = z/10;
  42   2        }
  43   1        usec = (256*TH0 + TL0)/2; 
  44   1        for(ki = 4 ; ki>=0 ; ki--)
  45   1        {
  46   2        display_time[ki] = usec%10 + '0';
  47   2          usec /= 10; 
  48   2        }
  49   1        
  50   1        lcd_cmd(0x80);    //Move Cursor to first row
  51   1        lcd_write_string(display_msg1);
  52   1        lcd_write_string(product);
  53   1        lcd_cmd(0xC0);
  54   1        lcd_write_string(display_msg2);
C51 COMPILER V9.60.7.0   ALGO_THOMASS                                                      04/08/2023 15:01:46 PAGE 2   

  55   1        lcd_write_string(display_time);
  56   1        lcd_write_char('u');
  57   1        lcd_write_char('s');
  58   1      
  59   1        
  60   1        while(1);
  61   1      
  62   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    744    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     63       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
